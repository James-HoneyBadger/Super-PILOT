# pytest configuration for SuperPILOT testing framework

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=3

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    ui: marks tests as UI tests
    hardware: marks tests as hardware integration tests
    iot: marks tests as IoT functionality tests
    robotics: marks tests as robotics tests
    performance: marks tests as performance benchmarks
    security: marks tests as security tests
    regression: marks tests as regression tests
    stress: marks tests as stress tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests

# Minimum version requirements
minversion = 7.0

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */conftest.py
    */test_*.py
    setup.py
    venv/*
    HoneyBadger/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = test_reports/coverage_html
title = SuperPILOT Coverage Report